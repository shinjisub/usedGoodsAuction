<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
		
		
		<!-- 방법1.데이터베이스 속성값의 설정위치표시 -->
		<context:property-placeholder location="classpath:prop/db/property/db_properties"/>
		
		<bean id="dataSource" 
			class="org.springframework.jdbc.datasource.DriverManagerDataSource">
			<property name="driverClassName"  value="${jdbc.driverClassName}"/>
			<property name="url" 			  value="${jdbc.url}"/>
			<property name="username" 		  value="${jdbc.username}"/>
			<property name="password" 		  value="${jdbc.password}"/>
		</bean>
		
		
		<bean id="sqlSessionFactory"  class="org.mybatis.spring.SqlSessionFactoryBean">	
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="classpath:prop/sql/mybatis/mybatis-config.xml"></property>
			<!-- mapperLocations 속성을 사용할경우 해당  xml파일 자동으로 인식 해준다.  <property name="mapperLocations" value="classpath:/*.xml"></property> --> 
		</bean>
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> 
			<constructor-arg index="0" ref="sqlSessionFactory"/> 
		</bean>
		
<!-- 		<bean id="sqlSessionFactory" 
			class="org.mybatis.spring.SqlSessionFactoryBean">
			<property name="dataSource" ref="dataSource" />
			<property name="configLocation" value="classpath:/prop/sql/mybatis/mybatis-config.xml"></property>
		</bean>
		<bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate"> <constructor-arg index="0" ref="sqlSessionFactory"/> </bean> -->
		
		
		<!-- 인터셉터 설정. -->
		<!-- 방법2.데이터베이스 속성값의 설정위치표시 ( 회사에서 사용하는 방식 )-->
		<!-- <bean id="propertyPlaceholderConfigurer"
			class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
			<property name="locations">
			<list>
				<value>classpath:prop/db/mybatis/sql.properties</value>
			</list>
			</property>
		</bean>-->
		
	<!-- 	쿼리 로그 찍으려면 datasource ID부분에 dataSourceSpied 넣고 밑에 주석풀기 --> 
	<!--<bean id="dataSource" 
			class="net.sf.log4jdbc.Log4jdbcProxyDataSource">
        	<constructor-arg ref="dataSourceSpied" />
	        <property name="logFormatter">
	            <bean class="net.sf.log4jdbc.tools.Log4JdbcCustomFormatter">
	                <property name="loggingType" value="MULTI_LINE" />
	                <property name="sqlPrefix" value="SQL         :  "/>
	            </bean>
	        </property>
    	</bean>  -->
    	<!-- <bean id="loggerAspect" class="com.projectIntroduction.aop.AopBaseSetting" /> -->
    	
		<!-- <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
			<property name="maxUploadSize"   value="100000000"/>
			<property name="maxInMemorySize" value="100000000"/>
		</bean> -->
</beans>
